Title,Document,Short summary,Key components,Relevance to Weird Machines
Wind Energy Test Bed Overview,Wind-Energy-Test-Bed-Overview.docx,"The Wind Energy Test Bed is a small-scale, full-stack cyber-physical replication of an industrial windfarm: 3D-printed/model turbines and sensors controlled by a mix of industrial PLCs (Siemens S7-1200 [CPU 1214C], Schneider TM221, Omron CP1H) and emulated PLCs (Raspberry Pi running OpenPLC), all orchestrated and monitored through Rapid SCADA. It uses standard industrial communications (Modbus TCP/RTU, OPC UA, MQTT, REST), includes a Simulink steady-state turbine model (ported to Arduino C) and EM side-channel instrumentation, and is designed to let researchers test control logic, simulate cyber-attacks, and study how protocol parsing, timing, and hardware side-channels can produce unintended or emergent (“weird machine”) behaviors.",3D-printed turbines; Arduino; Raspberry Pi/OpenPLC; Siemens/Schneider/Omron PLCs; Rapid SCADA; Modbus/OPC UA/MQTT/REST; Stunnel proxy/auth; Simulink; EM testing.,"Integrated CPS where protocol parsers, binary command channels, timing/jitter, and hardware side-channels can produce unintended computation or emergent behaviors. Proxy/auth and binary OPC UA commands are high-value surfaces."
Hacking & Computer Science,hacking_and_computer_science.pdf,"Defines hacking as empirical trust verification and introduces ""weird machines"" as unintended computational automata. Highly relevant to modeling CPS behaviors that arise from complex systems composed together and their cross-layer interactions. The slides demonstrate that emergent computational power = new attack surfaces ","Trust, computation, composition, weird machines, cross-layer analysis","Explores trust as a foundational layer of computing and shows how complex, layered systems inherently produce unintended ""weird machines"", allowing for emergent computational behaviors arising from the interaction of software, hardware, and human components. Designing a architecture outputs an intended architecture, but it also comes with unrealized unintended ""weird machines"" inside of intended architectures. Potentially creating the opportunity to utilize layers of components of the Wind Energy Testbed (PLCs, Sensors, Rapid-SCADA, ModBus, Proxy Server, etc) to create unintended or weird machines."
From Buffer Overflows Weird Machines and Theory of Computation,From Buffer Overflows Weird Machines and Theory of Computation.pdf,"Reframes exploitation as formal programming of emergent ""weird machines"", the key message is to study the input-handling routine as a language recognizers and model the exploded state space caused by bugs.","Weird Machines = unintended computational platform, state explosion via bugs, language-theoretic lens, methodlogy for exploit construction, primitives matter more than shellcode bytes (Use of existing capabilities of the program)",For a CPS environment this could suggest modeling sensor/PLC parsers and cross-layer interactions formally to find primitives that compose into attacks. 
Programming the weird machine slides,Programming the weird machine slides.pdf,"These slides higilight that programming a ""weird machine"" using exisitng capabilities remian viaable and is increasingly emergent in system with ASLR and DEP protections. They emphasize the importance of considering a system's initial state when analyzing or predciting the emergence of weird machine behaviors","Weird machines, programs as State machines, mitigation limits (ASLR & DEP), implicit state machines, automation challenges (static analysis, doesn't consider the initial state of a machine entirerly)","This work reinforces our focus on emergen security behaviors by showing that weird machines arise from unintended state transitions even in systems with modern protections like ASLR and DEP. And directly informs the study of CPS by highlighting how initial states and internal state machines can produce ""wierd machines"""
Using Routers to Build Logic Circuits: How Powerful is BGP?,vanbever_turing_icnp_2013.pdf,WIP,WIP,WIP
